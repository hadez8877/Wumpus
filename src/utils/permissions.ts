import { PermissionsBitField } from "discord.js";
import type APIPermissions from "@/types/permssions";

const Permissions: Record<APIPermissions, bigint> = {
  createInstantInvite: PermissionsBitField.Flags.CreateInstantInvite,
  kickMembers: PermissionsBitField.Flags.KickMembers,
  banMembers: PermissionsBitField.Flags.BanMembers,
  administrator: PermissionsBitField.Flags.Administrator,
  manageChannels: PermissionsBitField.Flags.ManageChannels,
  manageGuild: PermissionsBitField.Flags.ManageGuild,
  addReactions: PermissionsBitField.Flags.AddReactions,
  viewAuditLog: PermissionsBitField.Flags.ViewAuditLog,
  prioritySpeaker: PermissionsBitField.Flags.PrioritySpeaker,
  stream: PermissionsBitField.Flags.Stream,
  viewChannel: PermissionsBitField.Flags.ViewChannel,
  sendMessages: PermissionsBitField.Flags.SendMessages,
  sendTTSMessages: PermissionsBitField.Flags.SendTTSMessages,
  manageMessages: PermissionsBitField.Flags.ManageMessages,
  embedLinks: PermissionsBitField.Flags.EmbedLinks,
  attachFiles: PermissionsBitField.Flags.AttachFiles,
  readMessageHistory: PermissionsBitField.Flags.ReadMessageHistory,
  mentionEveryone: PermissionsBitField.Flags.MentionEveryone,
  useExternalEmojis: PermissionsBitField.Flags.UseExternalEmojis,
  viewGuildInsights: PermissionsBitField.Flags.ViewGuildInsights,
  connect: PermissionsBitField.Flags.Connect,
  speak: PermissionsBitField.Flags.Speak,
  muteMembers: PermissionsBitField.Flags.MuteMembers,
  deafenMembers: PermissionsBitField.Flags.DeafenMembers,
  moveMembers: PermissionsBitField.Flags.MoveMembers,
  useVAD: PermissionsBitField.Flags.UseVAD,
  changeNickname: PermissionsBitField.Flags.ChangeNickname,
  manageNicknames: PermissionsBitField.Flags.ManageNicknames,
  manageRoles: PermissionsBitField.Flags.ManageRoles,
  manageWebhooks: PermissionsBitField.Flags.ManageWebhooks,
  useApplicationCommands: PermissionsBitField.Flags.UseApplicationCommands,
  requestToSpeak: PermissionsBitField.Flags.RequestToSpeak,
  manageEvents: PermissionsBitField.Flags.ManageEvents,
  manageThreads: PermissionsBitField.Flags.ManageThreads,
  createPublicThreads: PermissionsBitField.Flags.CreatePublicThreads,
  createPrivateThreads: PermissionsBitField.Flags.CreatePrivateThreads,
  useExternalStickers: PermissionsBitField.Flags.UseExternalStickers,
  sendMessagesInThreads: PermissionsBitField.Flags.SendMessagesInThreads,
  startEmbeddedActivities: PermissionsBitField.Flags.UseEmbeddedActivities,
  moderateMembers: PermissionsBitField.Flags.ModerateMembers,
  manageAccess: BigInt(0),
};

export default Permissions;
